Windows環境ではおそらくtest_code.exeをコマンドプロンプト上で実行すれば、

--------------------
20201019133124 10.20.30.1/16 -
20201019133125 10.20.30.2/16 12
20201019133134 192.168.1.1/24 10
20201019133135 192.168.1.2/24 -
20201019133224 10.20.30.1/16 34
20201019133225 10.20.30.2/16 1
20201019133234 192.168.1.1/24 8
20201019133235 192.168.1.2/24 225
20201019133324 10.20.30.1/16 14
20201019133325 10.20.30.2/16 2
--------------------
--------------------
answer for question1
10.20.30.1/16 20201019133124 20201019133224
192.168.1.2/24 20201019133135 20201019133235
--------------------

という結果を返すはずである。(input.txtはテスト用のログ)

C++で記述しているので、exeファイルだと起動しない場合はMinGW環境の場合、
(Macなど)
>g++ -o test_code test_code.cpp
>./test_code

(windows)
>g++ -o test_code test_code.cpp
>test_code

というようにすれば良い。

解答した分は設問1の部分のみである。(直前になってバグに気づいた)
やりたいこと(やりたかったこと)を説明する。

1. 関数split_comma
入力された文字列strをカンマ(,)で部分文字列(prev番目からnext-1番目)に分解していき、その部分文字列をvectorに入れていく。
これについてはカンマで区切られているパターンの文字列の入力(csvファイルなど)で多用される。

2.関数function_question1
<確認日時>, <サーバアドレス>, <応答結果>
という形式であるときに、あるサーバアドレスの応答結果が"-"という結果になったときに、次に応答を返すときの確認日時を確認する。
データとして入れるのは、「タイムアウトをしたサーバアドレス」、「タイムアウトした時の確認日時」、「応答が復帰した時の確認日時」である。

main関数内では、input.txtのデータがsplit_commaで実行することで分解されていることを確認しつつ、
function_question1の実行結果を確認している。
--------------------
answer for question1
10.20.30.1/16 20201019133124 20201019133224
192.168.1.2/24 20201019133135 20201019133235
--------------------
これにより、タイムアウトしたサーバーとその故障期間を2つの確認日時を示す事によって表している。

設問2でやりたかったこと
vector<vector<string>> function_question2(vector<vector<string>> data, int N)
と定義する。dataからサーバーアドレスの名前を回収し、それぞれ"-"の数を数えることでタイムアウトの数を理解する。
あとは、N以上のタイムアウトがあるときに設問1と同様に出力する。

設問3は考え方はわかったが、設問4はサブネットをどういう意図で言っているのか分からなかった。
